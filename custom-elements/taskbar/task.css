.task {
    position: relative;
    display: block;
    width: 2.813rem;
    height: 2.813rem;
}

.task-load-animation {
    animation: task-enter 0.5s 1 ease forwards;
}

.task-unload-animation {
    animation: task-enter 0.5s 1 ease reverse forwards;
}

.task:not([data-focused]) .task-icon:hover,
.task:has(.previews:hover) .task-icon,
.task[data-focused] .task-icon {
    transform: scale(1.1) translateY(-0.688rem);
}

.task .task-icon:active {
    transform: scale(1) translateY(-0.563rem) !important;
}

.task .task-icon {
    width: 100%;
    height: 100%;
    transition: transform 0.2s;
    user-select: none;
	filter: drop-shadow(0 0.25rem 2px #0000002b);

}

.task .previews {
    box-sizing: border-box;
    position: absolute;
    display: flex;
    justify-content: center;
    align-items: start;
    height: 10.5rem;
    background-color: rgb(130 0 66 / 29%);
    border-radius: 0.313rem;
    bottom: calc(100% + 1.438rem);
    left: 50%;
    transform: translateX(-50%);
    backdrop-filter: blur(0.313rem);
    opacity: 0;
    transition: 0.1s ease-out;
    transition-delay: 0.35s;
}

.task[data-focused] .previews {
    opacity: 1;
}

.task .previews::after {
    content: "";
    position: absolute;
	bottom: -0.625rem;
    display: block;
    width: 100%;
    height: 1.25rem;
}

.task:has(.task-icon:hover) .previews {
    opacity: 1;
}

.task:has(.task-icon:active) .previews {
    opacity: 0;
}
.task .previews:hover {
    opacity: 1;
}

/* ------------ Preview ------------- */

.task .preview {
    position: relative;
    width: 15.313rem;
    height: 100%;
	border-radius: 0.313rem;
    display: grid;
    grid-template-rows: auto 1fr;
    container-type: size;
}

.task .preview:hover {
    background-color: #ffffff38;
}

.preview header {
    display: flex;
    justify-content: space-between;
    padding: 0.625rem;
    padding-bottom: 0;
    width: 100cqw;
    box-sizing: border-box;
}

.preview header .info {
    display: flex;
    justify-content: center;
    align-items: center;
    gap: 0.625rem;
    max-width: 80cqw;
}

.preview header .info h2 {
    color: white;
    font-size: 1rem;
    font-weight: normal;
    text-wrap: nowrap;
    text-overflow: ellipsis;
    overflow: hidden;
    margin: 0;
}

.preview header .info img {
    width: 1.125rem;
}

.preview .window-preview-wrapper {
    position: relative;
}

.preview .window-preview-wrapper:has(.custom-preview) {
    display: flex;
    justify-content: center;
    align-items: center;
}

.preview .window-preview-wrapper:not(:has(.custom-preview)) > * {
    top: 50% !important;
    left: 50% !important;
    translate: -50% -50%;
}

.preview .task-close-button {
    width: 1.563rem;
    height: 1.563rem;
    border: 0;
    border-radius: 2px;
    aspect-ratio: 1/1;
    font-size: 1rem;
    color: white;
    background: #0000003b;
    opacity: 0;
    cursor: pointer;
}

.preview .task-close-button:hover {
    background: rgb(174, 36, 36);
}

.task .preview:hover .task-close-button {
    opacity: 1;
}

.task .amount {
    right: -0.625rem;
    display: flex;
    justify-content: center;
    align-items: center;
    position: absolute;
    bottom: -3px;
    border-radius: 11px;
    background-color: #ff0000db;
    aspect-ratio: 1/1;
    color: white;
    font-weight: 900;
    width: 1.25rem;
    height: 1.25rem;
    opacity: 0;
    transition: 0.3s;
    pointer-events: none;
}

.task:not([data-focused]) .task-icon:hover + .amount,
.task:has(.previews:hover) .amount,
.task[data-focused] .amount {
	left: 50%;
	transform: translateX(-50%);
}

.bounce-animation {
    animation: bounce 0.3s ease-in;
}

@keyframes bounce {
    0% {
        scale: 1;
    }
    50% {
        scale: 0.9;
    }
    100% {
        scale: 1;
    }
}

@keyframes task-enter {
    0% {
        opacity: 0;
        transform: translateY(50px);
    }
    60% {
        opacity: 1;
        transform: translateY(-8px);
    }
    100% {
        transform: translateY(0);
    }
}
