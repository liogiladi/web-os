.recorder-content {
    background: linear-gradient(
        90deg,
        rgba(0, 0, 0, 1) 0%,
        rgba(11, 11, 11, 1) 18%,
        rgba(22, 22, 22, 1) 40%,
        rgba(25, 25, 25, 1) 57%,
        rgba(12, 12, 12, 1) 85%,
        rgba(0, 0, 0, 1) 100%
    );
    overflow: hidden;
}

.recorder-content .previews {
    position: relative;
    display: flex;
    justify-content: center;
    box-sizing: border-box;
    height: calc(100% - 5rem);
    padding: 1rem;
    padding-bottom: 0;
}

.recorder-content .previews > * {
    display: none;
    max-width: 100%;
    height: 100%;
}

.recorder-content:is([data-mode="pic"], [data-mode="vid"])
    .previews
    > *:nth-child(1) {
    display: block;
    border-radius: 2px;
    object-fit: cover;
}

.recorder-content:is([data-mode="pic"], [data-mode="vid"])[data-recording]
    .previews
    > *:nth-child(1) {
    outline: 1px solid red;
    outline-offset: 0.25rem;
    animation: flash-outline infinite 1.5s;
}

@keyframes flash-outline {
    0% {
        outline-color: transparent;
    }
    50% {
        outline-color: red;
    }
    100% {
        outline-color: transparent;
    }
}

.recorder-content[data-mode="mic"] .previews > *:nth-child(2) {
    display: block;
}

.recorder-content .buttons {
    display: flex;
    justify-content: space-between;
    box-sizing: border-box;
    height: 5rem;
    padding: 1rem;
}

.recorder-content .buttons .mode-buttons {
    display: flex;
    gap: 0.7rem;
}

.mode-buttons label {
    display: flex;
    justify-content: center;
    align-items: center;
    border: 0;
    border-radius: 2px;
    padding-inline: 0.8rem;
    outline: 1px solid white;
    color: white;
    transition: 0.1s;
    cursor: pointer;
}

.mode-buttons label:not(:has(input:checked)):hover {
    outline-width: 2px;
}

.mode-buttons label:has(input:checked) {
    color: black;
    background-color: white;
}

.recorder-content .buttons .start-stop-button {
    border: 0;
    box-sizing: border-box;
    border-radius: 2px;
    outline: 1px solid red;
    color: white;
    background: transparent;
    font-weight: 700;
    transition: 0.1s;
    cursor: pointer;
}

.recorder-content .buttons .start-stop-button:hover {
    outline-width: 2px;
}

.recorder-content .output-dialog[open] {
    top: 0;
    left: 0;
    display: grid;
    grid-template-rows: 1fr auto;
    height: 100%;
    width: 100%;
    border: 0;
    padding: 0;
    background: linear-gradient(
        90deg,
        rgba(0, 0, 0, 1) 0%,
        rgba(11, 11, 11, 1) 18%,
        rgba(22, 22, 22, 1) 40%,
        rgba(25, 25, 25, 1) 57%,
        rgba(12, 12, 12, 1) 85%,
        rgba(0, 0, 0, 1) 100%
    );
    opacity: 1;
    transition: opacity 0.3s;
    container-type: size;
}

.output-dialog[open]::after {
    content: "";
    position: absolute;
    z-index: 2;
    box-sizing: border-box;
    width: 100%;
    height: 100%;
    background-color: white;
    overflow: hidden;
    animation: flash-enter 1s 0.3s forwards;
    --background-color: white;
}

.recorder-content[data-mode="vid"] .output-dialog[open]::after {
    background-color: red;
    --background-color: red;
}

@keyframes flash-enter {
    from {
        background: var(--background-color);
        pointer-events: all;
    }
    to {
        background: transparent;
        pointer-events: none;
    }
}

dialog::backdrop {
    padding: 0;
}

.output-dialog > * {
    width: min(84%, 90cqh);
    margin: auto;
    border-radius: 2px;
    transition: scale 0.5s ease-out;
}

.output-dialog .dialog-buttons {
    display: flex;
    justify-content: center;
    gap: 1rem;
    padding-bottom: 1rem;
}

.dialog-buttons button {
    padding: 0.5rem 1rem;
    border: 1px solid;
    border-radius: 2px;
    color: white;
    background: transparent;
    cursor: pointer;
}

.dialog-buttons button:nth-child(2) {
    color: red;
}
